{
  "openapi": "3.0.3",
  "info": {
    "title": "NodeJS - REST API",
    "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about",
    "version": "0.0.01"
  },
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Show all users",
        "description": "This can only be done by admins.",
        "responses": {
          "404": {
            "description": "Users not found"
          },
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Tarkista tiedot"
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update age",
        "responses": {
          "200": {
            "description": "Käyttäjän ikä päivitetty onnistuneesti"
          }
        }
      }
    },
    "/user/account": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Show user data of logged in user",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "401": {
            "description": "Invalid username/password supplied"
          },
          "404": {
            "description": "Account data not found"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Käyttäjätili poistettu onnistuneesti"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "userTest123"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "age": {
            "type": "integer",
            "format": "int64",
            "example": 30
          },
          "jti": {
            "type": "string",
            "example": "12345"
          },
          "role": {
            "type": "string",
            "example": "user"
          }
        },
        "xml": {
          "name": "user"
        }
      }
    },
    "requestBodies": {
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    }
  }
}